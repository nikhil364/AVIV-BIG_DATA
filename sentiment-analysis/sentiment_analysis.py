# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ASNCD2uMvVfoaMoKAY_NphXPCb3Z3yxJ
"""

















# Check sentiment columns 
twitter_dat.head()



# Reading in reddit vaccine dataset
reddit_dat = pd.read_csv("datas_reddit.csv", engine='python')

# Checking to see if it was read in properly
reddit_dat.head()

# Checking comment column
reddit_dat['commeynt']

# Sentiment analysis 

# Loading in the lexicon
nltk.download('vader_lexicon')

# Loading in the analyzer 
analyzer = SentimentIntensityAnalyzer()

# Adding columns with sentiment score to the dataset 
reddit_dat['neg'] = reddit_dat['comment'].apply(lambda x:analyzer.polarity_scores(x)['neg'])
reddit_dat['neu'] = reddit_dat['comment'].apply(lambda x:analyzer.polarity_scores(x)['neu'])
reddit_dat['pos'] = reddit_dat['comment'].apply(lambda x:analyzer.polarity_scores(x)['pos'])
reddit_dat['compound'] = reddit_dat['comment'].apply(lambda x:analyzer.polarity_scores(x)['compound'])

# Checking a few sentiment scores 
reddit_dat['neg']

# Exporting csv
from google.colab import files

reddit_dat.to_csv('sentiment_reddit.csv')
files.download('sentiment_reddit.csv')

# Reading in youtube dataset
youtube_dat = pd.read_csv("youtube_dat.csv", engine='python')

# Checking comment column
youtube_dat.comments.dtype

# Sentiment analysis 

# Loading in the lexicon
nltk.download('vader_lexicon')

# Loading in the analyzer 
analyzer = SentimentIntensityAnalyzer()

# Adding columns with sentiment score to the dataset 
youtube_dat['neg'] = youtube_dat['comments'].apply(lambda x:analyzer.polarity_scores(str(x))['neg'])
youtube_dat['neu'] = youtube_dat['comments'].apply(lambda x:analyzer.polarity_scores(str(x))['neu'])
youtube_dat['pos'] = youtube_dat['comments'].apply(lambda x:analyzer.polarity_scores(str(x))['pos'])
youtube_dat['compound'] = youtube_dat['comments'].apply(lambda x:analyzer.polarity_scores(str(x))['compound'])

# Exporting csv
from google.colab import files

youtube_dat.to_csv('youtube_sentiment.csv')
files.download('youtube_sentiment.csv')